<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.IUserDao">
    <!--如果列明和实体类的属性名不一致,有两种解决方法：一种是将列名通过select ** as user**重新定义；
    一种是配置表的列名和实体类的属性名之间的对应关系,即resultMap-->
    <resultMap id="userMap" type="user">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>
    <!--了解：抽取重复的sql语句-->
    <sql id="defaultUser">
        select * from user
    </sql>

    <!-- 查询所有-->
    <select id="findAll" resultMap="userMap">
        <!--select id as userId,username as userName,address as userAddress,
        sex as userSex,birthday as userBirthday from user;-->
        <include refid="defaultUser"></include>
    </select>
    <!-- 根据Id查询用户,当传递参数仅有一个且为int类型(及其包装类)时，占位符可随便写,如id可写为uid-->
    <select id="findById" parameterType="int" resultMap="userMap">
        select * from user where id=#{uid}
    </select>
    <!-- 根据名称模糊查询用户-->
    <select id="findByName" parameterType="string" resultMap="userMap">
        <!--select * from user where username like '%${value}%'-->
        select * from user where username like #{name}
    </select>
    <!-- 根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.itheima.domain.QueryVo" resultMap="userMap">
        select * from user where username like #{user.userName}
    </select>
    <!-- 根据条件查询,涉及到实体类的属性名大小写很敏感 -->
    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>
    </select>
    <!--  根据QueryVo中的id集合实现查询用户列表  -->
    <select id="findUserInIds" resultMap="userMap" parameterType="queryvo">
        <include refid="defaultUser"></include>
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
</mapper>