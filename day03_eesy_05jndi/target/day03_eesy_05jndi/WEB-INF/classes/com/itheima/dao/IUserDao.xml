<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.IUserDao">
    <!--如果列明和实体类的属性名不一致,有两种解决方法：一种是将列名通过select ** as user**重新定义；
    一种是配置表的列名和实体类的属性名之间的对应关系,即resultMap-->
    <resultMap id="userMap" type="user">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

    <!-- 查询所有-->
    <select id="findAll" resultMap="userMap">
        <!--select id as userId,username as userName,address as userAddress,
        sex as userSex,birthday as userBirthday from user;-->
        select * from user;
    </select>
    <!-- 保存用户-->
    <insert id="saveUser" parameterType="USER">
        <!-- 配置插入操作后，获取插入数据的id,keyProperty对应实体类，keyColumn对应表-->
        <selectKey keyProperty="userId" order="AFTER" resultType="int" keyColumn="id">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values(#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>
    <!-- 更新用户-->
    <update id="updateUser" parameterType="user">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{userId};
    </update>
    <!-- 删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{uid}
    </delete>
    <!-- 根据Id查询用户,当传递参数仅有一个且为int类型(及其包装类)时，占位符可随便写,如id可写为uid-->
    <select id="findById" parameterType="int" resultMap="userMap">
        select * from user where id=#{uid};
    </select>
    <!-- 根据名称模糊查询用户-->
    <select id="findByName" parameterType="string" resultMap="userMap">
        <!--select * from user where username like '%${value}%'-->
        select * from user where username like #{name}
    </select>
    <!-- 获取用户的总记录条数-->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>
    <!-- 根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.itheima.domain.QueryVo" resultMap="userMap">
        select * from user where username like #{user.username}
    </select>
</mapper>